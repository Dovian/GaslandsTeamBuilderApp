@model GaslandsTeamBuilder.Models.BuildViewModel

<div>
    @Html.HiddenFor(model => model.build.Key, new { id = "buildKey" })

    <div id="dashboard">
        Build Slots:
        @Html.DisplayFor(model => model.build.FinalBuildSlots)<br />
        Can Cost:
        @Html.DisplayFor(model => model.build.FinalCanCost)<br />
        Crew:
        @Html.DisplayFor(model => model.build.FinalCrew)<br />
        Handling:
        @Html.DisplayFor(model => model.build.FinalHandling)<br />
        Hull:
        @Html.DisplayFor(model => model.build.FinalHull)<br />
        Max Gear:
        @Html.DisplayFor(model => model.build.FinalMaxGear)<br />
        Weight Class:
        @Html.DisplayFor(model => model.build.FinalWeightClass)<br />
    </div>

    Name:
    @Html.TextBoxFor(model => model.build.Name)<br />
    Driver:
    @Html.TextBoxFor(model => model.build.Driver)<br />
    Notes:
    @Html.TextAreaFor(model => model.build.Notes)<br />


    @Html.DropDownListFor(model => model.build.Sponsor.Key, Model.SponsorDropDown, "--Select Sponsor--", new { @onchange = "SaveBuild()" })<br />
    @Html.DropDownListFor(model => model.build.Vehicle.Key, Model.VehicleDropDown, "--Select Vehicle--", new { @onchange = "SaveBuild()" })<br />

    <br />

    <!--All need ids and events on selection-->
    @Html.DropDownList("Perks", Model.PerkDropDown, "--Select Perk--", new { id = "perkSelector", @onchange = "AddPerk()" })<br />
    @if (Model.build.Perks.Count > 0)
    {
        <table>
            <thead>
                <tr>
                    <td>Name</td>
                    <td>Cans</td>
                    <td>Effect</td>
                    <td>Remove</td>
                </tr>
            </thead>
            @foreach (var perk in Model.build.Perks)
            {
                <tr>
                    <td>@perk.Name</td>
                    <td>@perk.CanCost</td>
                    <td>@perk.Description</td>
                    <td><button class="removePerk" type="button" onclick="RemovePerk(@perk.Key)">X</button></td>
                </tr>
            }
        </table>
    }
    @Html.DropDownList("Upgrades", Model.UpgradeDropDown, "--Select Upgrade--", new { id = "upgradeSelector", @onchange = "AddUpgrade()" })<br />
    @if (Model.build.Upgrades.Count > 0)
    {
        <table>
            <thead>
                <tr>
                    <td>Name</td>
                    <td>Cans</td>
                    <td>Slots</td>
                    <td>Effect</td>
                </tr>
            </thead>
            @foreach (var upgrade in Model.build.Upgrades)
            {
                <tr>
                    <td>@upgrade.Name</td>
                    <td>@upgrade.CanCost</td>
                    <td>@upgrade.BuildSlotCost</td>
                    <td>???</td>
                    <td><button class="removeUpgrade" type="button" onclick="RemoveUpgrade(@upgrade.BuildUpgradeKey)">X</button></td>
                </tr>
            }
        </table>
    }
    @Html.DropDownList("Weapons", new SelectList(Model.WeaponDropDown, "WeaponKey", "ListDisplay"), "--Select Weapon--", new { id = "weaponSelector", @onchange = "ShowFacing()" })
    @foreach (var weapon in Model.WeaponDropDown)
    {
        @Html.DropDownList("Facing", new SelectList(weapon.FacingAllowed.Select(f => new { Value = f, Text = f }), "Value", "Text"), "--Select Facing--", new { id = "facing_" + weapon.WeaponKey, @class = "facings", hidden = "hidden" })
    }
    <button id="addWeaponButton" class="addWeapon" type="button" onclick="AddWeapon()" hidden="hidden">+</button>
    @if (Model.build.Weapons.Count > 0)
    {
        <table>
            <thead>
                <tr>
                    <td>Name</td>
                    <td>Cans</td>
                    <td>Slots</td>
                    <td>Attack</td>
                    <td>Ammo</td>
                    <td>Facing</td>
                    <td>Effect</td>
                </tr>
            </thead>
            @foreach (var weapon in Model.build.Weapons)
            {
                <tr>
                    <td>@weapon.Name</td>
                    <td>@weapon.CanCost</td>
                    <td>@weapon.BuildSlotCost</td>
                    <td>@weapon.Attack</td>
                    <td>@weapon.Ammo</td>
                    <td>@weapon.Facing</td>
                    <td>@weapon.SpecialRules</td>
                    <td><button class="removeWeapon" type="button" onclick="RemoveWeapon(@weapon.BuildWeaponKey)">X</button></td>
                </tr>
            }
        </table>
    }

    @if (Model.SpecialRules != null && Model.SpecialRules.Count > 0)
    {
        <h3>Vehicle Rules:</h3>
        if (Model.SpecialRules.Where(sr => sr.Category == "Vehicle").Count() == 0)
        {
            <div>None</div>
        }
        else
        {
            foreach (var rule in Model.SpecialRules.Where(sr => sr.Category == "Vehicle"))
            {
                <div>@(rule.Name): @(rule.Description)</div>
            }
        }
        <h3>Weapon Rules:</h3>
        if (Model.SpecialRules.Where(sr => sr.Category == "Weapon").Count() == 0)
        {
            <div>None</div>
        }
        else
        {
            foreach (var rule in Model.SpecialRules.Where(sr => sr.Category == "Weapon"))
            {
                <div>@(rule.Name): @(rule.Description)</div>
            }
        }
    }
</div>